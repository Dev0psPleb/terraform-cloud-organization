# plan-on-pr.yaml
name: Plan / Test on PR

on:
  pull_request:
    branches: [main, development, staging]
defaults:
  run:
    working-directory: ./environment

jobs:
  lint:
    name: Lint
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Run terraform fmt check
        run: terraform fmt -check -diff -recursive ./

  plan_and_test:
    name: Plan ESG SE XDR Demo Prod
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        path: [esg_se_xdr_demo_prod]
        include:
          - environment: development
            url: https://github.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize Terraform
        run: |
          cd ${{ matrix.path }}
          terraform init -input=false

      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          cd ${{ matrix.path }}
          terraform plan -input=false -no-color -out=tfplan \
          && terraform show -no-color tfplan
        env:
          TF_VAR_github_pat_token: ${{ secrets.GH_PAT_TOKEN }}
          TF_VAR_github_repository: ${{ github.repository }}
          TF_VAR_organization_name: Terraform Cloud Organization Test
          TF_VAR_terraform_api_token: ${{ secrets.TF_API_TOKEN }}
          TF_VAR_working_directory: ${{ matrix.path }}

      - name: Reformat Plan
        run: |
          echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
          | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

      - name: Put Plan in Env Var
        run: |
          PLAN=$(cat plan.txt)
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Plan to GitHub PR
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## ${{ matrix.path }} plan
            ```diff
            + Green
            - Red
            ! Orange
            @@ Pink @@
            #Gray
            ${{ env.PLAN }}
            ```

